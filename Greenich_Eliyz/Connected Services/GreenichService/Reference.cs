//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Greenich_Eliyz.GreenichService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ActivityList", Namespace="http://schemas.datacontract.org/2004/07/Model", ItemName="Activity")]
    [System.SerializableAttribute()]
    public class ActivityList : System.Collections.Generic.List<Greenich_Eliyz.GreenichService.Activity> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Activity", Namespace="http://schemas.datacontract.org/2004/07/Model")]
    [System.SerializableAttribute()]
    public partial class Activity : Greenich_Eliyz.GreenichService.BaseEntity {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActivityNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Greenich_Eliyz.GreenichService.City CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateActivityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EndTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ManagerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumVolunnteersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OperatorNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Greenich_Eliyz.GreenichService.ActivityType TypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ActivityName {
            get {
                return this.ActivityNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ActivityNameField, value) != true)) {
                    this.ActivityNameField = value;
                    this.RaisePropertyChanged("ActivityName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Greenich_Eliyz.GreenichService.City City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateActivity {
            get {
                return this.DateActivityField;
            }
            set {
                if ((this.DateActivityField.Equals(value) != true)) {
                    this.DateActivityField = value;
                    this.RaisePropertyChanged("DateActivity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EndTime {
            get {
                return this.EndTimeField;
            }
            set {
                if ((this.EndTimeField.Equals(value) != true)) {
                    this.EndTimeField = value;
                    this.RaisePropertyChanged("EndTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Location {
            get {
                return this.LocationField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationField, value) != true)) {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ManagerName {
            get {
                return this.ManagerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ManagerNameField, value) != true)) {
                    this.ManagerNameField = value;
                    this.RaisePropertyChanged("ManagerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NumVolunnteers {
            get {
                return this.NumVolunnteersField;
            }
            set {
                if ((this.NumVolunnteersField.Equals(value) != true)) {
                    this.NumVolunnteersField = value;
                    this.RaisePropertyChanged("NumVolunnteers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OperatorName {
            get {
                return this.OperatorNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OperatorNameField, value) != true)) {
                    this.OperatorNameField = value;
                    this.RaisePropertyChanged("OperatorName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartTime {
            get {
                return this.StartTimeField;
            }
            set {
                if ((this.StartTimeField.Equals(value) != true)) {
                    this.StartTimeField = value;
                    this.RaisePropertyChanged("StartTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Greenich_Eliyz.GreenichService.ActivityType Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseEntity", Namespace="http://schemas.datacontract.org/2004/07/Model")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Greenich_Eliyz.GreenichService.City))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Greenich_Eliyz.GreenichService.ActivityType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Greenich_Eliyz.GreenichService.User))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Greenich_Eliyz.GreenichService.Activity))]
    public partial class BaseEntity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="City", Namespace="http://schemas.datacontract.org/2004/07/Model")]
    [System.SerializableAttribute()]
    public partial class City : Greenich_Eliyz.GreenichService.BaseEntity {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ActivityType", Namespace="http://schemas.datacontract.org/2004/07/Model")]
    [System.SerializableAttribute()]
    public partial class ActivityType : Greenich_Eliyz.GreenichService.BaseEntity {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/Model")]
    [System.SerializableAttribute()]
    public partial class User : Greenich_Eliyz.GreenichService.BaseEntity {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime BirthdayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Greenich_Eliyz.GreenichService.City CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool GenderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsManagerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsOperatorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsVolunteerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Birthday {
            get {
                return this.BirthdayField;
            }
            set {
                if ((this.BirthdayField.Equals(value) != true)) {
                    this.BirthdayField = value;
                    this.RaisePropertyChanged("Birthday");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Greenich_Eliyz.GreenichService.City City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Gender {
            get {
                return this.GenderField;
            }
            set {
                if ((this.GenderField.Equals(value) != true)) {
                    this.GenderField = value;
                    this.RaisePropertyChanged("Gender");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsManager {
            get {
                return this.IsManagerField;
            }
            set {
                if ((this.IsManagerField.Equals(value) != true)) {
                    this.IsManagerField = value;
                    this.RaisePropertyChanged("IsManager");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsOperator {
            get {
                return this.IsOperatorField;
            }
            set {
                if ((this.IsOperatorField.Equals(value) != true)) {
                    this.IsOperatorField = value;
                    this.RaisePropertyChanged("IsOperator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsVolunteer {
            get {
                return this.IsVolunteerField;
            }
            set {
                if ((this.IsVolunteerField.Equals(value) != true)) {
                    this.IsVolunteerField = value;
                    this.RaisePropertyChanged("IsVolunteer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ActivityTypeList", Namespace="http://schemas.datacontract.org/2004/07/Model", ItemName="ActivityType")]
    [System.SerializableAttribute()]
    public class ActivityTypeList : System.Collections.Generic.List<Greenich_Eliyz.GreenichService.ActivityType> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="CityList", Namespace="http://schemas.datacontract.org/2004/07/Model", ItemName="City")]
    [System.SerializableAttribute()]
    public class CityList : System.Collections.Generic.List<Greenich_Eliyz.GreenichService.City> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="UserList", Namespace="http://schemas.datacontract.org/2004/07/Model", ItemName="User")]
    [System.SerializableAttribute()]
    public class UserList : System.Collections.Generic.List<Greenich_Eliyz.GreenichService.User> {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="GreenichService.IServiceProject")]
    public interface IServiceProject {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceProject/SelectAllActivity", ReplyAction="http://tempuri.org/IServiceProject/SelectAllActivityResponse")]
        Greenich_Eliyz.GreenichService.ActivityList SelectAllActivity();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceProject/SelectAllActivity", ReplyAction="http://tempuri.org/IServiceProject/SelectAllActivityResponse")]
        System.Threading.Tasks.Task<Greenich_Eliyz.GreenichService.ActivityList> SelectAllActivityAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceProject/InsertActivity", ReplyAction="http://tempuri.org/IServiceProject/InsertActivityResponse")]
        int InsertActivity(Greenich_Eliyz.GreenichService.Activity activity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceProject/InsertActivity", ReplyAction="http://tempuri.org/IServiceProject/InsertActivityResponse")]
        System.Threading.Tasks.Task<int> InsertActivityAsync(Greenich_Eliyz.GreenichService.Activity activity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceProject/UpdateActivity", ReplyAction="http://tempuri.org/IServiceProject/UpdateActivityResponse")]
        int UpdateActivity(Greenich_Eliyz.GreenichService.Activity activity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceProject/UpdateActivity", ReplyAction="http://tempuri.org/IServiceProject/UpdateActivityResponse")]
        System.Threading.Tasks.Task<int> UpdateActivityAsync(Greenich_Eliyz.GreenichService.Activity activity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceProject/DeleteActivity", ReplyAction="http://tempuri.org/IServiceProject/DeleteActivityResponse")]
        int DeleteActivity(Greenich_Eliyz.GreenichService.Activity activity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceProject/DeleteActivity", ReplyAction="http://tempuri.org/IServiceProject/DeleteActivityResponse")]
        System.Threading.Tasks.Task<int> DeleteActivityAsync(Greenich_Eliyz.GreenichService.Activity activity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceProject/SelectAllActivityType", ReplyAction="http://tempuri.org/IServiceProject/SelectAllActivityTypeResponse")]
        Greenich_Eliyz.GreenichService.ActivityTypeList SelectAllActivityType();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceProject/SelectAllActivityType", ReplyAction="http://tempuri.org/IServiceProject/SelectAllActivityTypeResponse")]
        System.Threading.Tasks.Task<Greenich_Eliyz.GreenichService.ActivityTypeList> SelectAllActivityTypeAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceProject/InsertActivityType", ReplyAction="http://tempuri.org/IServiceProject/InsertActivityTypeResponse")]
        int InsertActivityType(Greenich_Eliyz.GreenichService.ActivityType activityType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceProject/InsertActivityType", ReplyAction="http://tempuri.org/IServiceProject/InsertActivityTypeResponse")]
        System.Threading.Tasks.Task<int> InsertActivityTypeAsync(Greenich_Eliyz.GreenichService.ActivityType activityType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceProject/UpdateActivityType", ReplyAction="http://tempuri.org/IServiceProject/UpdateActivityTypeResponse")]
        int UpdateActivityType(Greenich_Eliyz.GreenichService.ActivityType activityType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceProject/UpdateActivityType", ReplyAction="http://tempuri.org/IServiceProject/UpdateActivityTypeResponse")]
        System.Threading.Tasks.Task<int> UpdateActivityTypeAsync(Greenich_Eliyz.GreenichService.ActivityType activityType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceProject/DeleteActivityType", ReplyAction="http://tempuri.org/IServiceProject/DeleteActivityTypeResponse")]
        int DeleteActivityType(Greenich_Eliyz.GreenichService.ActivityType activityType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceProject/DeleteActivityType", ReplyAction="http://tempuri.org/IServiceProject/DeleteActivityTypeResponse")]
        System.Threading.Tasks.Task<int> DeleteActivityTypeAsync(Greenich_Eliyz.GreenichService.ActivityType activityType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceProject/SelectAllCity", ReplyAction="http://tempuri.org/IServiceProject/SelectAllCityResponse")]
        Greenich_Eliyz.GreenichService.CityList SelectAllCity();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceProject/SelectAllCity", ReplyAction="http://tempuri.org/IServiceProject/SelectAllCityResponse")]
        System.Threading.Tasks.Task<Greenich_Eliyz.GreenichService.CityList> SelectAllCityAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceProject/InsertCity", ReplyAction="http://tempuri.org/IServiceProject/InsertCityResponse")]
        int InsertCity(Greenich_Eliyz.GreenichService.City city);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceProject/InsertCity", ReplyAction="http://tempuri.org/IServiceProject/InsertCityResponse")]
        System.Threading.Tasks.Task<int> InsertCityAsync(Greenich_Eliyz.GreenichService.City city);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceProject/UpdateCity", ReplyAction="http://tempuri.org/IServiceProject/UpdateCityResponse")]
        int UpdateCity(Greenich_Eliyz.GreenichService.City city);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceProject/UpdateCity", ReplyAction="http://tempuri.org/IServiceProject/UpdateCityResponse")]
        System.Threading.Tasks.Task<int> UpdateCityAsync(Greenich_Eliyz.GreenichService.City city);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceProject/DeleteCity", ReplyAction="http://tempuri.org/IServiceProject/DeleteCityResponse")]
        int DeleteCity(Greenich_Eliyz.GreenichService.City city);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceProject/DeleteCity", ReplyAction="http://tempuri.org/IServiceProject/DeleteCityResponse")]
        System.Threading.Tasks.Task<int> DeleteCityAsync(Greenich_Eliyz.GreenichService.City city);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceProject/SelectAllUser", ReplyAction="http://tempuri.org/IServiceProject/SelectAllUserResponse")]
        Greenich_Eliyz.GreenichService.UserList SelectAllUser();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceProject/SelectAllUser", ReplyAction="http://tempuri.org/IServiceProject/SelectAllUserResponse")]
        System.Threading.Tasks.Task<Greenich_Eliyz.GreenichService.UserList> SelectAllUserAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceProject/IsUsernameFree", ReplyAction="http://tempuri.org/IServiceProject/IsUsernameFreeResponse")]
        bool IsUsernameFree(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceProject/IsUsernameFree", ReplyAction="http://tempuri.org/IServiceProject/IsUsernameFreeResponse")]
        System.Threading.Tasks.Task<bool> IsUsernameFreeAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceProject/InsertUser", ReplyAction="http://tempuri.org/IServiceProject/InsertUserResponse")]
        int InsertUser(Greenich_Eliyz.GreenichService.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceProject/InsertUser", ReplyAction="http://tempuri.org/IServiceProject/InsertUserResponse")]
        System.Threading.Tasks.Task<int> InsertUserAsync(Greenich_Eliyz.GreenichService.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceProject/UpdateUser", ReplyAction="http://tempuri.org/IServiceProject/UpdateUserResponse")]
        int UpdateUser(Greenich_Eliyz.GreenichService.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceProject/UpdateUser", ReplyAction="http://tempuri.org/IServiceProject/UpdateUserResponse")]
        System.Threading.Tasks.Task<int> UpdateUserAsync(Greenich_Eliyz.GreenichService.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceProject/DeleteUser", ReplyAction="http://tempuri.org/IServiceProject/DeleteUserResponse")]
        int DeleteUser(Greenich_Eliyz.GreenichService.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceProject/DeleteUser", ReplyAction="http://tempuri.org/IServiceProject/DeleteUserResponse")]
        System.Threading.Tasks.Task<int> DeleteUserAsync(Greenich_Eliyz.GreenichService.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceProject/Login", ReplyAction="http://tempuri.org/IServiceProject/LoginResponse")]
        Greenich_Eliyz.GreenichService.User Login(Greenich_Eliyz.GreenichService.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceProject/Login", ReplyAction="http://tempuri.org/IServiceProject/LoginResponse")]
        System.Threading.Tasks.Task<Greenich_Eliyz.GreenichService.User> LoginAsync(Greenich_Eliyz.GreenichService.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceProject/OperatorsList", ReplyAction="http://tempuri.org/IServiceProject/OperatorsListResponse")]
        Greenich_Eliyz.GreenichService.UserList OperatorsList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceProject/OperatorsList", ReplyAction="http://tempuri.org/IServiceProject/OperatorsListResponse")]
        System.Threading.Tasks.Task<Greenich_Eliyz.GreenichService.UserList> OperatorsListAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceProjectChannel : Greenich_Eliyz.GreenichService.IServiceProject, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceProjectClient : System.ServiceModel.ClientBase<Greenich_Eliyz.GreenichService.IServiceProject>, Greenich_Eliyz.GreenichService.IServiceProject {
        
        public ServiceProjectClient() {
        }
        
        public ServiceProjectClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceProjectClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceProjectClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceProjectClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Greenich_Eliyz.GreenichService.ActivityList SelectAllActivity() {
            return base.Channel.SelectAllActivity();
        }
        
        public System.Threading.Tasks.Task<Greenich_Eliyz.GreenichService.ActivityList> SelectAllActivityAsync() {
            return base.Channel.SelectAllActivityAsync();
        }
        
        public int InsertActivity(Greenich_Eliyz.GreenichService.Activity activity) {
            return base.Channel.InsertActivity(activity);
        }
        
        public System.Threading.Tasks.Task<int> InsertActivityAsync(Greenich_Eliyz.GreenichService.Activity activity) {
            return base.Channel.InsertActivityAsync(activity);
        }
        
        public int UpdateActivity(Greenich_Eliyz.GreenichService.Activity activity) {
            return base.Channel.UpdateActivity(activity);
        }
        
        public System.Threading.Tasks.Task<int> UpdateActivityAsync(Greenich_Eliyz.GreenichService.Activity activity) {
            return base.Channel.UpdateActivityAsync(activity);
        }
        
        public int DeleteActivity(Greenich_Eliyz.GreenichService.Activity activity) {
            return base.Channel.DeleteActivity(activity);
        }
        
        public System.Threading.Tasks.Task<int> DeleteActivityAsync(Greenich_Eliyz.GreenichService.Activity activity) {
            return base.Channel.DeleteActivityAsync(activity);
        }
        
        public Greenich_Eliyz.GreenichService.ActivityTypeList SelectAllActivityType() {
            return base.Channel.SelectAllActivityType();
        }
        
        public System.Threading.Tasks.Task<Greenich_Eliyz.GreenichService.ActivityTypeList> SelectAllActivityTypeAsync() {
            return base.Channel.SelectAllActivityTypeAsync();
        }
        
        public int InsertActivityType(Greenich_Eliyz.GreenichService.ActivityType activityType) {
            return base.Channel.InsertActivityType(activityType);
        }
        
        public System.Threading.Tasks.Task<int> InsertActivityTypeAsync(Greenich_Eliyz.GreenichService.ActivityType activityType) {
            return base.Channel.InsertActivityTypeAsync(activityType);
        }
        
        public int UpdateActivityType(Greenich_Eliyz.GreenichService.ActivityType activityType) {
            return base.Channel.UpdateActivityType(activityType);
        }
        
        public System.Threading.Tasks.Task<int> UpdateActivityTypeAsync(Greenich_Eliyz.GreenichService.ActivityType activityType) {
            return base.Channel.UpdateActivityTypeAsync(activityType);
        }
        
        public int DeleteActivityType(Greenich_Eliyz.GreenichService.ActivityType activityType) {
            return base.Channel.DeleteActivityType(activityType);
        }
        
        public System.Threading.Tasks.Task<int> DeleteActivityTypeAsync(Greenich_Eliyz.GreenichService.ActivityType activityType) {
            return base.Channel.DeleteActivityTypeAsync(activityType);
        }
        
        public Greenich_Eliyz.GreenichService.CityList SelectAllCity() {
            return base.Channel.SelectAllCity();
        }
        
        public System.Threading.Tasks.Task<Greenich_Eliyz.GreenichService.CityList> SelectAllCityAsync() {
            return base.Channel.SelectAllCityAsync();
        }
        
        public int InsertCity(Greenich_Eliyz.GreenichService.City city) {
            return base.Channel.InsertCity(city);
        }
        
        public System.Threading.Tasks.Task<int> InsertCityAsync(Greenich_Eliyz.GreenichService.City city) {
            return base.Channel.InsertCityAsync(city);
        }
        
        public int UpdateCity(Greenich_Eliyz.GreenichService.City city) {
            return base.Channel.UpdateCity(city);
        }
        
        public System.Threading.Tasks.Task<int> UpdateCityAsync(Greenich_Eliyz.GreenichService.City city) {
            return base.Channel.UpdateCityAsync(city);
        }
        
        public int DeleteCity(Greenich_Eliyz.GreenichService.City city) {
            return base.Channel.DeleteCity(city);
        }
        
        public System.Threading.Tasks.Task<int> DeleteCityAsync(Greenich_Eliyz.GreenichService.City city) {
            return base.Channel.DeleteCityAsync(city);
        }
        
        public Greenich_Eliyz.GreenichService.UserList SelectAllUser() {
            return base.Channel.SelectAllUser();
        }
        
        public System.Threading.Tasks.Task<Greenich_Eliyz.GreenichService.UserList> SelectAllUserAsync() {
            return base.Channel.SelectAllUserAsync();
        }
        
        public bool IsUsernameFree(string username) {
            return base.Channel.IsUsernameFree(username);
        }
        
        public System.Threading.Tasks.Task<bool> IsUsernameFreeAsync(string username) {
            return base.Channel.IsUsernameFreeAsync(username);
        }
        
        public int InsertUser(Greenich_Eliyz.GreenichService.User user) {
            return base.Channel.InsertUser(user);
        }
        
        public System.Threading.Tasks.Task<int> InsertUserAsync(Greenich_Eliyz.GreenichService.User user) {
            return base.Channel.InsertUserAsync(user);
        }
        
        public int UpdateUser(Greenich_Eliyz.GreenichService.User user) {
            return base.Channel.UpdateUser(user);
        }
        
        public System.Threading.Tasks.Task<int> UpdateUserAsync(Greenich_Eliyz.GreenichService.User user) {
            return base.Channel.UpdateUserAsync(user);
        }
        
        public int DeleteUser(Greenich_Eliyz.GreenichService.User user) {
            return base.Channel.DeleteUser(user);
        }
        
        public System.Threading.Tasks.Task<int> DeleteUserAsync(Greenich_Eliyz.GreenichService.User user) {
            return base.Channel.DeleteUserAsync(user);
        }
        
        public Greenich_Eliyz.GreenichService.User Login(Greenich_Eliyz.GreenichService.User user) {
            return base.Channel.Login(user);
        }
        
        public System.Threading.Tasks.Task<Greenich_Eliyz.GreenichService.User> LoginAsync(Greenich_Eliyz.GreenichService.User user) {
            return base.Channel.LoginAsync(user);
        }
        
        public Greenich_Eliyz.GreenichService.UserList OperatorsList() {
            return base.Channel.OperatorsList();
        }
        
        public System.Threading.Tasks.Task<Greenich_Eliyz.GreenichService.UserList> OperatorsListAsync() {
            return base.Channel.OperatorsListAsync();
        }
    }
}
